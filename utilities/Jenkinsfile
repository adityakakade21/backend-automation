pipeline
{
    agent
	{
        dockerfile
		{
        filename 'Dockerfile'
        dir 'utilities'
        }
    }
    stages
	{
        stage('Checkout')
		{
            steps
			{
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/adityakakade21/backend-automation.git']])
            }
		}
        stage('log version info')
		{
            steps
			{
                sh 'python --version'
            }
		}
        stage('Test')
		{
            steps
			{
                git 'https://github.com/adityakakade21/backend-automation.git'
                sh 'behave'
            }
        }
		stage('Run Test') {
                    steps {
                        script {
                            try {
                                sh 'behave  --no-capture -f allure_behave.formatter:AllureFormatter -o AllureRepoers'
                                stash name: 'AllureRepoers', includes: 'AllureRepoers/*'
                                currentBuild.result = 'SUCCESS'
                            } catch (e) {
                                stash name: 'AllureRepoers', includes: 'AllureRepoers/*'
                                currentBuild.result = 'FAILED'
                                throw e
                            }
                        }
                    }
                }


    }
	post
		{

			always {
            unstash 'AllureRepoers' //extract results
            script {
                allure([
                includeProperties: false,
                jdk: '',
                properties: [],
                reportBuildPolicy: 'ALWAYS',
                results: [[path: 'AllureRepoers']]
            ])
            }
        }

        }
}